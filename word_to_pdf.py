# -*- coding: utf-8 -*-
"""Word to PDF.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FQZlmDaPM9GsEpl4Qlp4VeMvYd--ig8R
"""

# Word to PDF Highly accurate
# Install required libraries and LibreOffice
!apt-get install -y libreoffice
!pip install gradio

import os
import subprocess
import gradio as gr

def convert_docx_to_pdf_colab(docx_filepath):
    """
    Converts a .docx file to a .pdf file using LibreOffice in Colab.
    """
    try:
        # Ensure the file is a .docx file
        if not docx_filepath.lower().endswith(".docx"):
            return "Error: Please upload a .docx file."

        # Define output file path
        output_pdf = docx_filepath.replace(".docx", ".pdf")

        # Run LibreOffice to convert .docx to .pdf
        subprocess.run(
            ["libreoffice", "--headless", "--convert-to", "pdf", "--outdir", os.path.dirname(docx_filepath), docx_filepath],
            check=True
        )

        # Check if the PDF was created
        if os.path.exists(output_pdf):
            return output_pdf
        else:
            return "Error: Conversion failed."

    except Exception as e:
        return f"Error: {e}"

# Gradio UI function
def gradio_convert_colab(docx_filepath):
    output_pdf = convert_docx_to_pdf_colab(docx_filepath)
    if output_pdf.endswith(".pdf"):
        return output_pdf
    else:
        return output_pdf

# Gradio Interface
interface = gr.Interface(
    fn=gradio_convert_colab,
    inputs=gr.File(label="Upload Word Document (.docx)", type="filepath"),
    outputs=gr.File(label="Download Converted PDF"),
    title="Word to PDF Converter (Google Colab)",
    description="Upload a Word document (.docx) to convert it into a PDF with formatting preserved (uses LibreOffice)."
)

# Launch the Gradio interface
interface.launch(share=True)